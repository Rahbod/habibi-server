<?php

/**
 * This is the model class for table "{{repairman_ratings}}".
 *
 * The followings are the available columns in table 'ym_user_transactions':
 * @property string $id
 * @property string $repairman_id
 * @property string $request_id
 * @property string $rates
 * @property string $comment
 *
 * The followings are the available model relations:
 * @property Users $repairman
 * @property Requests $request
 */
class RepairmanRatings extends CActiveRecord
{

    public $rates = [
        'appearance' => 'وضعیت ظاهری',
        'deal' => 'نحوه برخورد',
        'quality' => 'کیفیت انجام کار',
    ];

    public function tableName()
    {
        return '{{repairman_ratings}}';
    }

    /**
     * @return array validation rules for model attributes.
     */
    public function rules()
    {
        // NOTE: you should only define rules for those attributes that
        // will receive user inputs.
        return array(
            array('request_id', 'required'),
            array('repairman_id, request_id', 'length', 'max' => 10),
            array('rates, comment', 'safe'),
            // The following rule is used by search().
            // @todo Please remove those attributes that should not be searched.
            array('id, repairman_id, request_id, rates, comment', 'safe', 'on' => 'search'),
        );
    }

    /**
     * @return array relational rules.
     */
    public function relations()
    {
        // NOTE: you may need to adjust the relation name and the related
        // class name for the relations automatically generated below.
        return array(
            'repairman' => array(self::BELONGS_TO, 'Users', 'repairman_id'),
            'request' => array(self::BELONGS_TO, 'Requests', 'request_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels()
    {
        return array(
            'id' => 'شناسه',
            'repairman_id' => 'تعمیرکار',
            'request_id' => 'درخواست',
            'rates' => 'امتیازات',
            'comment' => 'نظر',
        );
    }

    /**
     * Retrieves a list of models based on the current search/filter conditions.
     *
     * Typical usecase:
     * - Initialize the model fields with values from filter form.
     * - Execute this method to get CActiveDataProvider instance which will filter
     * models according to data in model fields.
     * - Pass data provider to CGridView, CListView or any similar widget.
     *
     * @return CActiveDataProvider the data provider that can return the models
     * based on the search/filter conditions.
     */
    public function search()
    {
        // @todo Please modify the following code to remove attributes that should not be searched.

        $criteria = new CDbCriteria;
        $criteria->compare('id', $this->id, true);
        $criteria->compare('repairman_id', $this->repairman_id);
        $criteria->compare('request_id', $this->request_id);
        $criteria->compare('rates', $this->rates);
        $criteria->compare('comment', $this->comment, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
            'pagination' => array('pageSize' => isset($_GET['pageSize']) ? $_GET['pageSize'] : 20)
        ));
    }

    protected function beforeSave()
    {
        $this->rates = is_array($this->rates) ? CJSON::encode($this->rates) : $this->rates;
        return parent::beforeSave(); // TODO: Change the autogenerated stub
    }

    protected function afterFind()
    {
        parent::afterFind();
        $this->rates = !is_array($this->rates) ? CJSON::decode($this->rates) : $this->rates;
    }
}