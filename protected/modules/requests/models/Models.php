<?php

/**
 * This is the model class for table "{{models}}".
 *
 * The followings are the available columns in table '{{models}}':
 * @property string $id
 * @property string $title
 * @property string $slug
 * @property string $category_id
 * @property string $brand_id
 * @property string $order
 *
 * The followings are the available model relations:
 * @property Brands $brand
 * @property Categories $category
 * @property Requests[] $requests
 */
class Models extends CActiveRecord
{
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return '{{models}}';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('title, slug, category_id, brand_id', 'required'),
			array('title, slug', 'length', 'max'=>255),
			array('brand_id, category_id, order', 'length', 'max'=>10),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('id, title, slug, category_id, brand_id, order', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'brand' => array(self::BELONGS_TO, 'Brands', 'brand_id'),
			'requests' => array(self::HAS_MANY, 'Requests', 'model_id'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'title' => 'عنوان',
			'slug' => 'عنوان یکتا',
			'brand_id' => 'برند',
            'category_id' => 'نوع لوازم',
			'order' => 'Order',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id,true);
		$criteria->compare('title',$this->title,true);
		$criteria->compare('slug',$this->slug,true);
        $criteria->compare('category_id',$this->category_id,true);
		$criteria->compare('brand_id',$this->brand_id,true);
		$criteria->compare('order',$this->order,true);
		$criteria->order = 'id DESC';
		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return Models the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}

	protected function beforeSave()
    {
        $this->slug = $this->slug?str_replace([' ','.'],'-',$this->slug):null;
        return parent::beforeSave(); // TODO: Change the autogenerated stub
    }

    /**
     * @param $brandID
     * @param bool $count
     * @return array|string
     */
    public static function getList($brandID, $count = false)
    {
        if($count)
            return self::model()->countByAttributes(['brand_id' => $brandID]);
        $data = self::model()->findAllByAttributes(['brand_id' => $brandID]);
        return $data ? CHtml::listData($data, 'id', 'title') : [];
    }
}
